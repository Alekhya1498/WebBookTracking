// <auto-generated />
using BookTrackingApplication.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookTrackingApplication.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220422022341_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("BookTrackingApplication.Data.Book", b =>
                {
                    b.Property<string>("ISBN")
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ISBN");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("BookTrackingApplication.Data.Category", b =>
                {
                    b.Property<string>("NameToken")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("BookISBN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Decription")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("NameToken");

                    b.HasIndex("BookISBN");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("BookTrackingApplication.Data.CategoryType", b =>
                {
                    b.Property<string>("Type")
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryNameToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Type");

                    b.HasIndex("CategoryNameToken");

                    b.ToTable("CategoryType");
                });

            modelBuilder.Entity("BookTrackingApplication.Data.Category", b =>
                {
                    b.HasOne("BookTrackingApplication.Data.Book", null)
                        .WithMany("Category")
                        .HasForeignKey("BookISBN");
                });

            modelBuilder.Entity("BookTrackingApplication.Data.CategoryType", b =>
                {
                    b.HasOne("BookTrackingApplication.Data.Category", null)
                        .WithMany("CategoryType")
                        .HasForeignKey("CategoryNameToken");
                });

            modelBuilder.Entity("BookTrackingApplication.Data.Book", b =>
                {
                    b.Navigation("Category");
                });

            modelBuilder.Entity("BookTrackingApplication.Data.Category", b =>
                {
                    b.Navigation("CategoryType");
                });
#pragma warning restore 612, 618
        }
    }
}
